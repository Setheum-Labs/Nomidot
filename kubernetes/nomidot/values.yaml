# Default values for nomidot.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
## common values
nodeSelector: {}

imagePullSecrets:
  - name: regcred

cloudsql:
  commandline:
    args: "-instances=<copy-from-gcp-sql-overview>"

## nodewatcher
nodewatcher:
  name: nodewatcher

  dbName: kusama-nodewatcher
  dbUser: kusama-nodewatcher
  dbPassword: from-gitlab-vars

  replicaCount: 1

  image:
    repository: prismagraphql/prisma:1.34

  service:
    type: ClusterIP
    port: 4466
=======
imagePullSecrets: regcred
=======
imagePullSecrets:
  - name: regcred

>>>>>>> 991e0b1... added frontend server template
nodeSelector: {}
cloudsqlInstanceCredentials: some-secret.json-from-gitlab-vars
>>>>>>> 8ba937f... fv-wip-01
=======
=======
## common values
>>>>>>> 0437e02... nodeSelector and new values file for prod
nodeSelector: {}

imagePullSecrets:
  - name: regcred

cloudsql:
  commandline:
    args: "-instances=parity-prod:europe-west3:nomidot=tcp:0.0.0.0:5432"

<<<<<<< HEAD

# cloudsqlInstanceConnectionName: parity-prod:europe-west3:nomidot=tcp:0.0.0.0:5432
>>>>>>> 35317fc... added nodewatcher deployemten

=======
## nodewatcher
>>>>>>> 0437e02... nodeSelector and new values file for prod
nodewatcher:
  name: nodewatcher

  dbName: from-gitlab-vars
  dbUser: from-gitlab-vars
  dbPassword: from-gitlab-vars

  replicaCount: 1

  image:
    repository: prismagraphql/prisma:1.34

  service:
    type: ClusterIP
    port: 4466

frontend:
  name: frontend
  replicaCount: 1

  image:
<<<<<<< HEAD
    repository: paritytech
=======
    repository: gcr.io/test-installations-222013
>>>>>>> 8ba937f... fv-wip-01
    pullPolicy: Always

  nameOverride: ""
  fullnameOverride: ""

<<<<<<< HEAD
  service:
    type: ClusterIP
    port: 80

server:
  name: server
  replicaCount: 2

  image:
    repository: paritytech
    pullPolicy: Always

  nameOverride: ""
  fullnameOverride: ""

<<<<<<< HEAD
#  ingress:
#    enabled: false
#    annotations: {}
#      kubernetes.io/ingress.class: traefik
#    hosts:
#      - host: chart-example.local
#        paths: []
=======

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:


service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
>>>>>>> 8ba937f... fv-wip-01
=======
  service:
    type: ClusterIP
    port: 80

server:
  name: server
  replicaCount: 2

  image:
    repository: gcr.io/test-installations-222013
    pullPolicy: Always

  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 4000

#  ingress:
#    enabled: false
#    annotations: {}
#      kubernetes.io/ingress.class: traefik
#    hosts:
#      - host: chart-example.local
#        paths: []
>>>>>>> 991e0b1... added frontend server template
